{"title":"10个有趣的Python高级脚本","uid":"ae63644c6a89b1dcf12bd6f46e9970d0","slug":"post4","date":"2022-11-25T07:34:08.000Z","updated":"2022-11-25T09:34:00.437Z","comments":true,"path":"api/articles/post4.json","keywords":"DwyaneLee, DwyaneLee's Blog, DwyaneLee的博客, 学习使我进步","cover":"/img/sio.png","content":"<h1 id=\"10个有趣的Python高级脚本\"><a href=\"#10个有趣的Python高级脚本\" class=\"headerlink\" title=\"10个有趣的Python高级脚本\"></a>10个有趣的Python高级脚本</h1><h2 id=\"▍1、Jpg转Png\"><a href=\"#▍1、Jpg转Png\" class=\"headerlink\" title=\"▍1、Jpg转Png\"></a>▍1、Jpg转Png</h2><ul>\n<li>图片格式转换，以前可能第一时间改文件名(｀・ω・´)。</li>\n<li>如今编写一个Python脚本就能完成各种图片格式的转换，此处以jpg转成png为例。</li>\n<li>有两种解决方法，都分享给大家。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 图片格式转换, Jpg转Png\n\n# 方法①\nfrom PIL import Image\n\nimg &#x3D; Image.open(&#39;test.xlsx.jpg&#39;)\nimg.save(&#39;test1.png&#39;)\n\n# 方法②\nfrom cv2 import imread, imwrite\n\nimage &#x3D; imread(&quot;test.xlsx.jpg&quot;, 1)\nimwrite(&quot;test2.png&quot;, image)</code></pre>\n\n<h2 id=\"▍2、PDF加密和解密\"><a href=\"#▍2、PDF加密和解密\" class=\"headerlink\" title=\"▍2、PDF加密和解密\"></a>▍2、PDF加密和解密</h2><ul>\n<li>如果你有100个或更多的PDF文件需要加密，手动进行加密肯定是不可行的，极其浪费时间。</li>\n<li>使用Python的pikepdf模块，即可对文件进行加密，写一个循环就能进行批量加密文档。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># PDF加密\nimport pikepdf\n\npdf &#x3D; pikepdf.open(&quot;test.xlsx.pdf&quot;)\npdf.save(&#39;encrypt.pdf&#39;, encryption&#x3D;pikepdf.Encryption(owner&#x3D;&quot;your_password&quot;, user&#x3D;&quot;your_password&quot;, R&#x3D;4))\npdf.close()</code></pre>\n\n<ul>\n<li>有加密那么便会有解密，代码如下：</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># PDF解密\nimport pikepdf\n\npdf &#x3D; pikepdf.open(&quot;encrypt.pdf&quot;, password&#x3D;&#39;your_password&#39;)\npdf.save(&quot;decrypt.pdf&quot;)\npdf.close()</code></pre>\n\n<h2 id=\"▍3、获取电脑的配置信息\"><a href=\"#▍3、获取电脑的配置信息\" class=\"headerlink\" title=\"▍3、获取电脑的配置信息\"></a>▍3、获取电脑的配置信息</h2><ul>\n<li>很多小伙伴可能会使用鲁大师来看自己的电脑配置，这样还需要下载一个软件。</li>\n<li>使用Python的WMI模块，便可以轻松查看你的电脑信息。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 获取计算机信息\nimport wmi\n\n\ndef System_spec():\n    Pc &#x3D; wmi.WMI()\n    os_info &#x3D; Pc.Win32_OperatingSystem()[0]\n    processor &#x3D; Pc.Win32_Processor()[0]\n    Gpu &#x3D; Pc.Win32_VideoController()[0]\n    os_name &#x3D; os_info.Name.encode(&#39;utf-8&#39;).split(b&#39;|&#39;)[0].decode(&#39;utf-8&#39;)\n    ram &#x3D; float(os_info.TotalVisibleMemorySize) &#x2F; 1048576\n    print(f&#39;操作系统: &#123;os_name&#125;&#39;)\n    print(f&#39;CPU: &#123;processor.Name&#125;&#39;)\n    print(f&#39;内存: &#123;ram&#125; GB&#39;)\n    print(f&#39;显卡: &#123;Gpu.Name&#125;&#39;)\n    print(&quot;\\n计算机信息如上 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑&quot;)\n\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    System_spec()</code></pre>\n\n<ul>\n<li>就以我自己的电脑为例，运行代码就能看到配置</li>\n</ul>\n<pre class=\"line-numbers language-text\" data-language=\"text\"><code class=\"language-text\">操作系统: Microsoft Windows 10 专业版\nCPU: Intel(R) Core(TM) i3-10100 CPU @ 3.60GHz\n内存: 15.833415985107422 GB\n显卡: Intel(R) UHD Graphics 630\n\n计算机信息如上 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑</code></pre>\n\n<h2 id=\"▍4、解压文件\"><a href=\"#▍4、解压文件\" class=\"headerlink\" title=\"▍4、解压文件\"></a>▍4、解压文件</h2><ul>\n<li>使用zipfile模块进行文件解压，同理也可以对文件进行压缩。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 解压文件\nfrom zipfile import ZipFile\n\nunzip &#x3D; ZipFile(&quot;file.zip&quot;, &quot;r&quot;)\nunzip.extractall(&quot;output Folder&quot;)</code></pre>\n\n<h2 id=\"▍5、Excel工作表合并\"><a href=\"#▍5、Excel工作表合并\" class=\"headerlink\" title=\"▍5、Excel工作表合并\"></a>▍5、Excel工作表合并</h2><ul>\n<li><p>帮助你将Excel工作表合并到一张表上，表内容如下图：<br><img src=\"https://raw.githubusercontent.com/DwyaneLe/template/main/img/1669364900518.png\" alt=\"excel未合并前图片\"></p>\n</li>\n<li><p>6张表，其余表的内容和第一张表都一样。</p>\n</li>\n<li><p>设置表格数量为5，将会合并前5张表的内容。</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import pandas as pd\n\n# 文件名\nfilename &#x3D; &quot;test.xlsx&quot;\n# 表格数量\nT_sheets &#x3D; 5\n\ndf &#x3D; []\nfor i in range(1, T_sheets + 1):\n    sheet_data &#x3D; pd.read_excel(filename, sheet_name&#x3D;i, header&#x3D;None)\n    df.append(sheet_data)\n\n# 合并表格\noutput &#x3D; &quot;merged.xlsx&quot;\ndf &#x3D; pd.concat(df)\ndf.to_excel(output)</code></pre>\n\n<ul>\n<li>结果如下：<br><img src=\"https://raw.githubusercontent.com/DwyaneLe/template/main/img/1669365220219.png\" alt=\"excel合并后图片\"></li>\n</ul>\n<h2 id=\"▍6、将图像转换为素描图\"><a href=\"#▍6、将图像转换为素描图\" class=\"headerlink\" title=\"▍6、将图像转换为素描图\"></a>▍6、将图像转换为素描图</h2><ul>\n<li>和之前的图片格式转换有点类似，就是对图像进行处理。</li>\n<li>以前大家可能会使用到美图秀秀，现在可能就是抖音的滤镜了。</li>\n<li>其实使用Python的OpenCV，就能够快速实现很多你想要的效果。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 图像转换\nimport cv2\n\n# 读取图片\nimg &#x3D; cv2.imread(&quot;img.jpg&quot;)\n# 灰度\ngrey &#x3D; cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\ninvert &#x3D; cv2.bitwise_not(grey)\n# 高斯滤波\nblur_img &#x3D; cv2.GaussianBlur(invert, (7, 7), 0)\ninverse_blur &#x3D; cv2.bitwise_not(blur_img)\nsketch_img &#x3D; cv2.divide(grey, inverse_blur, scale&#x3D;256.0)\n# 保存\ncv2.imwrite(&#39;sketch.jpg&#39;, sketch_img)\ncv2.waitKey(0)\ncv2.destroyAllWindows()</code></pre>\n\n<ul>\n<li><p>原图如下：<br><img src=\"https://raw.githubusercontent.com/DwyaneLe/template/main/img/1669365571629.jpg\" alt=\"转换素描图前原图\"></p>\n</li>\n<li><p>素描图如下，还挺好看的<br><img src=\"https://raw.githubusercontent.com/DwyaneLe/template/main/img/sketch.jpg\" alt=\"转换后的素描图\"></p>\n</li>\n</ul>\n<h2 id=\"▍7、获取CPU温度\"><a href=\"#▍7、获取CPU温度\" class=\"headerlink\" title=\"▍7、获取CPU温度\"></a>▍7、获取CPU温度</h2><ul>\n<li>有了这个Python脚本，你将不需要任何软件来了解CPU的温度。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 获取CPU温度\nfrom time import sleep\nfrom pyspectator.processor import Cpu\n\ncpu &#x3D; Cpu(monitoring_latency&#x3D;1)\nwith cpu:\n    while True:\n        print(f&#39;Temp: &#123;cpu.temperature&#125; °C&#39;)\n        sleep(2)</code></pre>\n\n<h2 id=\"▍8、提取PDF表格\"><a href=\"#▍8、提取PDF表格\" class=\"headerlink\" title=\"▍8、提取PDF表格\"></a>▍8、提取PDF表格</h2><ul>\n<li>有的时候，我们需要从PDF中提取表格数据。</li>\n<li>下面这个简单的脚本将帮助你在一秒钟内完成相同的操作。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 方法①\nimport camelot\n\ntables &#x3D; camelot.read_pdf(&quot;tables.pdf&quot;)\nprint(tables)\ntables.export(&quot;extracted.csv&quot;, f&#x3D;&quot;csv&quot;, compress&#x3D;True)\n\n# 方法②, 需要安装Java8\nimport tabula\n\ntabula.read_pdf(&quot;tables.pdf&quot;, pages&#x3D;&quot;all&quot;)\ntabula.convert_into(&quot;table.pdf&quot;, &quot;output.csv&quot;, output_format&#x3D;&quot;csv&quot;, pages&#x3D;&quot;all&quot;)</code></pre>\n\n<ul>\n<li><p>PDF文档的内容如下，包含了一个表格。<br><img src=\"/../img/640.jpeg\" alt=\"表格处理前图片\"></p>\n</li>\n<li><p>提取到的CSV文件内容如下：<br><img src=\"/../img/641.jpeg\" alt=\"表格处理前图片\"></p>\n</li>\n</ul>\n<h2 id=\"▍9、截图\"><a href=\"#▍9、截图\" class=\"headerlink\" title=\"▍9、截图\"></a>▍9、截图</h2><ul>\n<li>该脚本将简单地截取屏幕截图，而无需使用任何屏幕截图软件。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 方法①\nfrom mss import mss\n\nwith mss() as screenshot:\n    screenshot.shot(output&#x3D;&#39;scr.png&#39;)\n\n# 方法②\nimport PIL.ImageGrab\n\nscr &#x3D; PIL.ImageGrab.grab()\nscr.save(&quot;scr.png&quot;)</code></pre>\n\n<h2 id=\"▍10、拼写检查器\"><a href=\"#▍10、拼写检查器\" class=\"headerlink\" title=\"▍10、拼写检查器\"></a>▍10、拼写检查器</h2><ul>\n<li>这个Python脚本可以进行拼写检查，当然只对英文有效，毕竟中文博大精深呐。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 拼写检查\n# 方法①\nimport textblob\n\ntext &#x3D; &quot;mussage&quot;\nprint(&quot;original text: &quot; + str(text))\n\nchecked &#x3D; textblob.TextBlob(text)\nprint(&quot;corrected text: &quot; + str(checked.correct()))\n\n# 方法②\nimport autocorrect\n\nspell &#x3D; autocorrect.Speller(lang&#x3D;&#39;en&#39;)\n\n# 以英语为例\nprint(spell(&#39;cmputr&#39;))\nprint(spell(&#39;watr&#39;))\nprint(spell(&#39;survice&#39;))</code></pre>","feature":true,"text":"10个有趣的Python高级脚本▍1、Jpg转Png 图片格式转换，以前可能第一时间改文件名(｀・ω・´)。 如今编写一个Python脚本就能完成各种图片格式的转换，此处以jpg转成png为例。 有两种解决方法，都分享给大家。 # 图片格式转换, Jpg转Png # 方法① fr...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Script","slug":"Script","count":1,"path":"api/categories/Script.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#10%E4%B8%AA%E6%9C%89%E8%B6%A3%E7%9A%84Python%E9%AB%98%E7%BA%A7%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">10个有趣的Python高级脚本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D1%E3%80%81Jpg%E8%BD%ACPng\"><span class=\"toc-text\">▍1、Jpg转Png</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D2%E3%80%81PDF%E5%8A%A0%E5%AF%86%E5%92%8C%E8%A7%A3%E5%AF%86\"><span class=\"toc-text\">▍2、PDF加密和解密</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D3%E3%80%81%E8%8E%B7%E5%8F%96%E7%94%B5%E8%84%91%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">▍3、获取电脑的配置信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D4%E3%80%81%E8%A7%A3%E5%8E%8B%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">▍4、解压文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D5%E3%80%81Excel%E5%B7%A5%E4%BD%9C%E8%A1%A8%E5%90%88%E5%B9%B6\"><span class=\"toc-text\">▍5、Excel工作表合并</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D6%E3%80%81%E5%B0%86%E5%9B%BE%E5%83%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%B4%A0%E6%8F%8F%E5%9B%BE\"><span class=\"toc-text\">▍6、将图像转换为素描图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D7%E3%80%81%E8%8E%B7%E5%8F%96CPU%E6%B8%A9%E5%BA%A6\"><span class=\"toc-text\">▍7、获取CPU温度</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D8%E3%80%81%E6%8F%90%E5%8F%96PDF%E8%A1%A8%E6%A0%BC\"><span class=\"toc-text\">▍8、提取PDF表格</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D9%E3%80%81%E6%88%AA%E5%9B%BE\"><span class=\"toc-text\">▍9、截图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E2%96%8D10%E3%80%81%E6%8B%BC%E5%86%99%E6%A3%80%E6%9F%A5%E5%99%A8\"><span class=\"toc-text\">▍10、拼写检查器</span></a></li></ol></li></ol>","author":{"name":"DwyaneLee","slug":"blog-author","avatar":"https://raw.githubusercontent.com/DwyaneLe/template/main/img/head_img.jpg","link":"/","description":"用舍由时 行藏在我","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"百度安全验证（旋转图片js逆向）","uid":"b054dd68c0b897bd6ff64a1cf29e97c3","slug":"post5","date":"2022-12-07T07:08:57.000Z","updated":"2022-12-07T10:03:20.781Z","comments":true,"path":"api/articles/post5.json","keywords":"DwyaneLee, DwyaneLee's Blog, DwyaneLee的博客, 学习使我进步","cover":"/img/wallhaven-green_shark.jpg","text":"百度安全验证（旋转验证逆向） 百度安全验证（旋转图片验证）是百度搜索引擎的一种反爬虫机制，当你在百度搜索引擎中搜索一些关键词时，如果你的IP地址在一段时间内搜索次数过多，百度会弹出一个验证窗口，要求你进行验证，验证通过后才能继续搜索。 本文将介绍百度安全验证的原理，以及如何使用P...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"JS","slug":"JS","count":1,"path":"api/categories/JS.json"},{"name":"验证码","slug":"JS/验证码","count":1,"path":"api/categories/JS/验证码.json"}],"tags":[{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"Spider","slug":"Spider","count":1,"path":"api/tags/Spider.json"}],"author":{"name":"DwyaneLee","slug":"blog-author","avatar":"https://raw.githubusercontent.com/DwyaneLe/template/main/img/head_img.jpg","link":"/","description":"用舍由时 行藏在我","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"post3","uid":"d9d5b92cc89a9a959cc07650f502c9c9","slug":"post3","date":"2022-11-23T03:36:41.000Z","updated":"2022-11-23T03:37:48.946Z","comments":true,"path":"api/articles/post3.json","keywords":"DwyaneLee, DwyaneLee's Blog, DwyaneLee的博客, 学习使我进步","cover":"/img/dlo.png","text":"test3测试3import numpy as np import pandas as pd import matplotlib.pyplot as plt import seaborn as sns","link":"","photos":[],"count_time":{"symbolsCount":100,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"test","slug":"test","count":3,"path":"api/tags/test.json"}],"author":{"name":"DwyaneLee","slug":"blog-author","avatar":"https://raw.githubusercontent.com/DwyaneLe/template/main/img/head_img.jpg","link":"/","description":"用舍由时 行藏在我","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}