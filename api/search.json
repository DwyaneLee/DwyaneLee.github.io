[{"id":"1ec75c9500e590549ef8457c51595608","title":"10个有趣的高级脚本","content":"10个有趣的高级脚本▍1、Jpg转Png\n图片格式转换，以前可能第一时间想到的是【格式工厂】这个软件。\n如今编写一个Python脚本就能完成各种图片格式的转换，此处以jpg转成png为例。\n有两种解决方法，都分享给大家。# 图片格式转换, Jpg转Png\n\n# 方法①\nfrom PIL import Image\n\nimg &#x3D; Image.open(&#39;test.jpg&#39;)\nimg.save(&#39;test1.png&#39;)\n\n\n# 方法②\nfrom cv2 import imread, imwrite\n\nimage &#x3D; imread(&quot;test.jpg&quot;, 1)\nimwrite(&quot;test2.png&quot;, image)\n\n▍2、PDF加密和解密\n如果你有100个或更多的PDF文件需要加密，手动进行加密肯定是不可行的，极其浪费时间。\n使用Python的pikepdf模块，即可对文件进行加密，写一个循环就能进行批量加密文档。# PDF加密\nimport pikepdf\n\npdf &#x3D; pikepdf.open(&quot;test.pdf&quot;)\npdf.save(&#39;encrypt.pdf&#39;, encryption&#x3D;pikepdf.Encryption(owner&#x3D;&quot;your_password&quot;, user&#x3D;&quot;your_password&quot;, R&#x3D;4))\npdf.close()\n有加密那么便会有解密，代码如下。# PDF解密\nimport pikepdf\n\npdf &#x3D; pikepdf.open(&quot;encrypt.pdf&quot;,  password&#x3D;&#39;your_password&#39;)\npdf.save(&quot;decrypt.pdf&quot;)\npdf.close()\n\n▍3、获取电脑的配置信息\n很多小伙伴可能会使用鲁大师来看自己的电脑配置，这样还需要下载一个软件。\n使用Python的WMI模块，便可以轻松查看你的电脑信息。# 获取计算机信息\nimport wmi\n\n\ndef System_spec():\n    Pc &#x3D; wmi.WMI()\n    os_info &#x3D; Pc.Win32_OperatingSystem()[0]\n    processor &#x3D; Pc.Win32_Processor()[0]\n    Gpu &#x3D; Pc.Win32_VideoController()[0]\n    os_name &#x3D; os_info.Name.encode(&#39;utf-8&#39;).split(b&#39;|&#39;)[0].decode(&#39;utf-8&#39;)\n    ram &#x3D; float(os_info.TotalVisibleMemorySize) &#x2F; 1048576\n    print(f&#39;操作系统: &#123;os_name&#125;&#39;)\n    print(f&#39;CPU: &#123;processor.Name&#125;&#39;)\n    print(f&#39;内存: &#123;ram&#125; GB&#39;)\n    print(f&#39;显卡: &#123;Gpu.Name&#125;&#39;)\n    print(&quot;\\n计算机信息如上 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑&quot;)\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;:\n    System_spec()\n就以我自己的电脑为例，运行代码就能看到配置操作系统: Microsoft Windows 10 专业版\nCPU: Intel(R) Core(TM) i3-10100 CPU @ 3.60GHz\n内存: 15.833415985107422 GB\n显卡: Intel(R) UHD Graphics 630\n\n计算机信息如上 ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑ ↑\n\n","slug":"post4","date":"2022-11-25T07:34:08.000Z","categories_index":"","tags_index":"","author_index":"DwyaneLee"},{"id":"d9d5b92cc89a9a959cc07650f502c9c9","title":"post3","content":"test3测试3import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","slug":"post3","date":"2022-11-23T03:36:41.000Z","categories_index":"","tags_index":"test","author_index":"DwyaneLee"},{"id":"c5749e5a4a999cd79b953d6e1af6619a","title":"post2","content":"test2测试2import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","slug":"post2","date":"2022-11-23T03:36:37.000Z","categories_index":"","tags_index":"test","author_index":"DwyaneLee"},{"id":"ca91d7e46a7142c8ad42dd23db7bac4e","title":"post1","content":"test1测试1import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","slug":"post1","date":"2022-11-23T03:10:04.000Z","categories_index":"","tags_index":"test","author_index":"DwyaneLee"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2022-11-22T10:44:21.572Z","categories_index":"","tags_index":"","author_index":"DwyaneLee"}]